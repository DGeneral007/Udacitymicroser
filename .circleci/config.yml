version: 2.1

jobs:
    build-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                keys: [frontend-build]
            - run:
                name: Build front-end
                command: |
                    cd frontend
                    npm install
                    npm run build
            - save_cache:
                paths: [frontend/node_modules]
                key: frontend-build

    build-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                keys: [backend-build]
            - run:
                name: Back-end build
                command: |
                    cd backend
                    npm install
                    npm run build
            - save_cache:
                paths: [backend/node_modules]
                key: backend-build
    # Compile errors have been fixed, now onto the next
    test-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            # Checkout code from git
            - checkout
            # Restore from cache
            - restore_cache:
                keys: [frontend-build]
            # Your job code here
            - run:
                name: Run frontend test
                command: |
                    cd frontend
                    npm install
                    npm run test
                
    test-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            # Checkout code from git
            - checkout
            # Restore from cache
            - restore_cache:
                keys: [backend-build]
            # Your job code here
            - run:
                name: Run backend Test
                command: |
                    cd backend
                    npm install
                    npm run test
    # Test runs erros fixed
    scan-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            # Checkout code from git
            - checkout
            # Restore from cache
            - restore_cache:
                keys: [frontend-build]
            # Your job code here
            - run:
                name: scan frontend dependencies
                command: |
                    cd frontend
                    npm install
                    # npm install oauth-sign@^0.9.0
                    npm audit fix --audit-level=critical

    scan-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            # Checkout code from git
            - checkout
            # Restore from cache
            - restore_cache:
                keys: [backend-build]
            # Your job code here
            - run:
                name: scan banckend dependencies
                command: |
                    cd backend
                    npm install
                    # npm install oauth-sign@^0.9.0
                    npm audit fix --audit-level=critical
    # scan-test fixed
    deploy-infrastructure:
        docker:
            # Docker image here that supports AWS CLI
            image: cimg/base
        steps:
            # Checkout code from git
            - checkout
            - run:
                name: install unzip and amazon cli
                command: |
                    apt-get install unzip curl \
                    curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip" \
                    unzip awscli-bundle.zip \
                    sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws \
            - run:
                name: Ensure back-end infrastructure exists
                command: |
                    aws cloudformation deploy \
                    --template-file .circleci/files/backend.yml \
                    --tags project=udapeople \
                    --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
                    --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
            - run:
                name: Ensure front-end infrastructure exist
                command: |
                    aws cloudformation deploy \
                    --template-file .circleci/files/frontend.yml \
                    --tags project=udapeople \
                    --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
                    --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  
            - run:
                name: Add back-end ip to ansible inventory
                command: |
                    aws ec2 describe-instances \
                    --query 'Reservations[*].Instances[*].PublicIpAddress' \
                    --filters "Name=tag:Project,Values=udacity" \
                    --output text >> .circleci/ansible/inventory.txt
            - persist_to_workspace:
                root: ~/
                paths:
                    - project/.circleci/ansible/inventory.txt
        # Here's where you will add some code to rollback on failure

workflows:
    default:
        jobs:
            - build-frontend
            - build-backend
            - test-frontend:
                requires: [build-frontend]
            - test-backend:
                requires: [build-backend]
            - scan-frontend:
                requires: [build-frontend]
            - scan-backend:
                requires: [build-backend]
